import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

const BusinessModels = () => {
  const [selectedModel, setSelectedModel] = useState(null);
  const [customization, setCustomization] = useState({});
  const [businessPlan, setBusinessPlan] = useState(null);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    // Load the business plan from localStorage
    const storedBusinessPlan = localStorage.getItem('currentBusinessPlan');
    if (storedBusinessPlan) {
      const businessPlanData = JSON.parse(storedBusinessPlan);
      setBusinessPlan(businessPlanData);
    }
    setLoading(false);
  }, []);

  // Business models will be generated by AI based on the user's idea
  const getBusinessModels = () => {
    if (!businessPlan?.leanCanvas) return [];
    
    const revenueStreams = businessPlan.leanCanvas.revenueStreams || [];
    const valueProps = businessPlan.leanCanvas.valuePropositions || [];
    
    return [
      {
        id: 'ai-generated',
        name: 'AI-Generated Model',
        description: 'Based on your idea and market analysis',
        icon: 'fas fa-robot',
        color: 'primary',
        pros: valueProps.slice(0, 4),
        cons: ['Requires validation', 'Market testing needed', 'Iteration required'],
        revenue: {
          primary: revenueStreams[0] || 'TBD',
          secondary: revenueStreams[1] || 'TBD',
          tertiary: revenueStreams[2] || 'TBD'
        },
        metrics: {
          conversion: 'TBD',
          ltv: 'TBD',
          cac: 'TBD'
        }
      }
    ];
  };

  const businessModels = getBusinessModels();

  const handleModelSelect = (model) => {
    setSelectedModel(model);
    setCustomization({
      pricing: model.revenue,
      features: [],
      target: 'students'
    });
  };

  const renderModelCard = (model) => (
    <div key={model.id} className="col-lg-6 mb-4">
      <div 
        className={`card h-100 ${selectedModel?.id === model.id ? 'border-primary shadow' : ''}`}
        style={{ cursor: 'pointer' }}
        onClick={() => handleModelSelect(model)}
      >
        <div className="card-body">
          <div className="d-flex align-items-center mb-3">
            <div className={`bg-${model.color} text-white rounded-circle p-3 me-3`}>
              <i className={`${model.icon} fa-lg`}></i>
            </div>
            <div>
              <h5 className="card-title mb-1">{model.name}</h5>
              <p className="card-text text-muted small">{model.description}</p>
            </div>
          </div>

          <div className="row">
            <div className="col-6">
              <h6 className="text-success small">Pros</h6>
              <ul className="list-unstyled small">
                {model.pros.slice(0, 2).map((pro, index) => (
                  <li key={index} className="mb-1">
                    <i className="fas fa-check text-success me-1"></i>
                    {pro}
                  </li>
                ))}
              </ul>
            </div>
            <div className="col-6">
              <h6 className="text-danger small">Cons</h6>
              <ul className="list-unstyled small">
                {model.cons.slice(0, 2).map((con, index) => (
                  <li key={index} className="mb-1">
                    <i className="fas fa-times text-danger me-1"></i>
                    {con}
                  </li>
                ))}
              </ul>
            </div>
          </div>

          <div className="mt-3">
            <div className="row text-center">
              <div className="col-4">
                <div className="small text-muted">Conversion</div>
                <div className="fw-bold">{model.metrics.conversion}</div>
              </div>
              <div className="col-4">
                <div className="small text-muted">LTV</div>
                <div className="fw-bold">{model.metrics.ltv}</div>
              </div>
              <div className="col-4">
                <div className="small text-muted">CAC</div>
                <div className="fw-bold">{model.metrics.cac}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderCustomization = () => {
    if (!selectedModel) return null;

    return (
      <div className="card">
        <div className="card-body">
          <h5 className="card-title">
            <i className="fas fa-cogs me-2"></i>
            Customize Your {selectedModel.name}
          </h5>

          <div className="row">
            <div className="col-lg-6">
              <h6>Pricing Tiers</h6>
              {Object.entries(selectedModel.revenue).map(([tier, description]) => (
                <div key={tier} className="card mb-2">
                  <div className="card-body py-2">
                    <div className="d-flex justify-content-between">
                      <span className="fw-bold text-capitalize">{tier}</span>
                      <span className="text-muted small">{description}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            <div className="col-lg-6">
              <h6>Key Features</h6>
              <div className="form-check">
                <input className="form-check-input" type="checkbox" id="ai-scheduling" />
                <label className="form-check-label" htmlFor="ai-scheduling">
                  AI-Powered Scheduling
                </label>
              </div>
              <div className="form-check">
                <input className="form-check-input" type="checkbox" id="team-collaboration" />
                <label className="form-check-label" htmlFor="team-collaboration">
                  Team Collaboration
                </label>
              </div>
              <div className="form-check">
                <input className="form-check-input" type="checkbox" id="analytics" />
                <label className="form-check-label" htmlFor="analytics">
                  Advanced Analytics
                </label>
              </div>
              <div className="form-check">
                <input className="form-check-input" type="checkbox" id="integrations" />
                <label className="form-check-label" htmlFor="integrations">
                  Third-party Integrations
                </label>
              </div>
            </div>
          </div>

          <div className="mt-4">
            <h6>Revenue Projections (Year 1)</h6>
            <div className="row">
              <div className="col-md-3">
                <div className="text-center">
                  <div className="stat-number text-primary">1,000</div>
                  <p className="text-muted small">Users</p>
                </div>
              </div>
              <div className="col-md-3">
                <div className="text-center">
                  <div className="stat-number text-success">$15,000</div>
                  <p className="text-muted small">Monthly Revenue</p>
                </div>
              </div>
              <div className="col-md-3">
                <div className="text-center">
                  <div className="stat-number text-warning">$180,000</div>
                  <p className="text-muted small">Annual Revenue</p>
                </div>
              </div>
              <div className="col-md-3">
                <div className="text-center">
                  <div className="stat-number text-info">75%</div>
                  <p className="text-muted small">Gross Margin</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="container py-5">
      <div className="row">
        <div className="col-12">
          <div className="text-center mb-5">
            <h1 className="display-5 fw-bold mb-3">
              Choose Your <span className="text-gradient">Business Model</span>
            </h1>
            <p className="lead">
              Select the revenue model that best fits your startup idea
            </p>
          </div>

          {/* Business Model Cards */}
          <div className="row mb-5">
            {businessModels.map(renderModelCard)}
          </div>

          {/* Model Comparison */}
          <div className="card mb-5">
            <div className="card-body">
              <h5 className="card-title mb-4">
                <i className="fas fa-balance-scale me-2"></i>
                Model Comparison
              </h5>
              <div className="table-responsive">
                <table className="table table-hover">
                  <thead>
                    <tr>
                      <th>Model</th>
                      <th>Best For</th>
                      <th>Revenue Potential</th>
                      <th>Risk Level</th>
                      <th>Time to Revenue</th>
                    </tr>
                  </thead>
                  <tbody>
                    {businessModels.map((model) => (
                      <tr key={model.id}>
                        <td>
                          <div className="d-flex align-items-center">
                            <i className={`${model.icon} text-${model.color} me-2`}></i>
                            {model.name}
                          </div>
                        </td>
                        <td>
                          {model.id === 'freemium' && 'High-growth startups'}
                          {model.id === 'subscription' && 'Established products'}
                          {model.id === 'marketplace' && 'Two-sided markets'}
                          {model.id === 'advertising' && 'High-traffic apps'}
                        </td>
                        <td>
                          <span className={`badge ${
                            model.id === 'freemium' ? 'bg-warning' :
                            model.id === 'subscription' ? 'bg-success' :
                            model.id === 'marketplace' ? 'bg-primary' : 'bg-info'
                          }`}>
                            {model.id === 'freemium' ? 'Medium' :
                             model.id === 'subscription' ? 'High' :
                             model.id === 'marketplace' ? 'Very High' : 'Low'}
                          </span>
                        </td>
                        <td>
                          <span className={`badge ${
                            model.id === 'freemium' ? 'bg-warning' :
                            model.id === 'subscription' ? 'bg-success' :
                            model.id === 'marketplace' ? 'bg-danger' : 'bg-info'
                          }`}>
                            {model.id === 'freemium' ? 'Medium' :
                             model.id === 'subscription' ? 'Low' :
                             model.id === 'marketplace' ? 'High' : 'Low'}
                          </span>
                        </td>
                        <td>
                          {model.id === 'freemium' && '6-12 months'}
                          {model.id === 'subscription' && '3-6 months'}
                          {model.id === 'marketplace' && '12-18 months'}
                          {model.id === 'advertising' && '9-15 months'}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          {/* Customization Panel */}
          {renderCustomization()}

          {/* Action Buttons */}
          <div className="text-center mt-5">
            <button
              className="btn btn-primary btn-lg me-3"
              onClick={() => navigate('/financial-projections')}
              disabled={!selectedModel}
            >
              <i className="fas fa-arrow-right me-2"></i>
              Continue to Financial Projections
            </button>
            <button className="btn btn-outline-primary btn-lg">
              <i className="fas fa-save me-2"></i>
              Save Model
            </button>
          </div>

          {/* Progress Bar */}
          <div className="mt-5">
            <div className="progress" style={{ height: '8px' }}>
              <div
                className="progress-bar bg-primary"
                role="progressbar"
                style={{ width: '80%' }}
                aria-valuenow="80"
                aria-valuemin="0"
                aria-valuemax="100"
              ></div>
            </div>
            <div className="d-flex justify-content-between mt-2">
              <small className="text-muted">Submit Idea</small>
              <small className="text-muted">Problem Refinement</small>
              <small className="text-muted">Market Research</small>
              <small className="text-primary fw-bold">Business Model</small>
              <small className="text-muted">Pitch Deck</small>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BusinessModels;
